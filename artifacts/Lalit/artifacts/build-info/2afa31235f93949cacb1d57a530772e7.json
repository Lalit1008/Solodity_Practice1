{
	"id": "2afa31235f93949cacb1d57a530772e7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"artifacts/Lalit/Delegatecall.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity  >=0.5.0 <0.8.0;\n\n/* Delegatecall executes other contract's code inside the contract that called it.\nUsing Delegate Call:\n* msg.sender and msg.value preserved to the original value.\n* what happen to the state variable: When code inside contract B is Executed, it does not change \nthe state Variable inside contract B buâ€  state variable inside contract A is updated \n\nDelegatecall is a low level function in Solidity that executes code from another contract using \nthe storage, sender, and ether amount of the caller's contract. Using delegatecall \nyou can write upgradable contract, even though once a contract is deployed on the blockchain, \nyou cannot change the code of the contract.\n\nstate variable in Contrat B must be in exact same order in contract A but if we change the order of\nstate variable than not receive correct answer.\n\nNotes:\ndelegatecall runs code of callee in caller's context ( storage, msg.sender, msg.value ).\nstate variab;e of \n\n\n\nUses: \nwhen two contract already deploy on blockchain it means we canot change the code inside bot contract. \nin this case Contract A delegate call to contract B, than able to change state varialbe value withour changing the code of anyone.\n*/"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"sources": {
			"artifacts/Lalit/Delegatecall.sol": {
				"ast": {
					"absolutePath": "artifacts/Lalit/Delegatecall.sol",
					"exportedSymbols": {},
					"id": 2,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:0"
						}
					],
					"src": "37:1216:0"
				},
				"id": 0
			}
		}
	}
}