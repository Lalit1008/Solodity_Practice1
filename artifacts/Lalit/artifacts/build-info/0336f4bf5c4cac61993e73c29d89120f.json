{
	"id": "0336f4bf5c4cac61993e73c29d89120f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"artifacts/Lalit/modifier.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity  >=0.5.0 <0.8.0;\n\n// modifier specia type of function, code duplicity ki jagah use karte hai.i.e: code reuse kar sakte hai.\n// modifier me input bhi dal sakte hai\n\ncontract Modifier{\n\n\n    modifier modname(){\nfor (uint i=0; i<10;i++){\n\n//code\n_;\n\n }\n\n\n    }\n// modifer name ko re\nfunction fun1() public pure modname returns(string memory){\n\n for (uint i=0; i<10;i++){\n\n//code\n\nreturn \" hare Krishna\";\n\n }\n}\n\n\nfunction fun2() public pure returns ( uint _x ){\nfor (uint i=0; i<10;i++){\n\n//code\nreturn _x=25;\n\n }\n    \n}\n\nfunction fun3() public view returns ( address){\nfor (uint i=0; i<10;i++){\n\n// code\n\nreturn ( msg.sender);\n\n }\n    \n}\n} "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"artifacts/Lalit/modifier.sol": {
				"Modifier": {
					"abi": [
						{
							"inputs": [],
							"name": "fun1",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fun2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_x",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fun3",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"artifacts/Lalit/modifier.sol\":217:689  contract Modifier{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"artifacts/Lalit/modifier.sol\":217:689  contract Modifier{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x157b5167\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x446a45b7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7b8239fa\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"artifacts/Lalit/modifier.sol\":462:569  function fun2() public pure returns ( uint _x ){... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"artifacts/Lalit/modifier.sol\":333:459  function fun1() public pure modname returns(string memory){... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_10:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_12\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_10)\n    tag_12:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_13\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_13:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"artifacts/Lalit/modifier.sol\":571:687  function fun3() public view returns ( address){... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"artifacts/Lalit/modifier.sol\":462:569  function fun2() public pure returns ( uint _x ){... */\n    tag_7:\n        /* \"artifacts/Lalit/modifier.sol\":500:507  uint _x */\n      0x00\n        /* \"artifacts/Lalit/modifier.sol\":516:522  uint i */\n      dup1\n        /* \"artifacts/Lalit/modifier.sol\":523:524  0 */\n      0x00\n        /* \"artifacts/Lalit/modifier.sol\":516:524  uint i=0 */\n      swap1\n      pop\n        /* \"artifacts/Lalit/modifier.sol\":528:530  10 */\n      0x0a\n        /* \"artifacts/Lalit/modifier.sol\":526:527  i */\n      dup2\n        /* \"artifacts/Lalit/modifier.sol\":526:530  i<10 */\n      lt\n        /* \"artifacts/Lalit/modifier.sol\":511:562  for (uint i=0; i<10;i++){... */\n      iszero\n      tag_18\n      jumpi\n        /* \"artifacts/Lalit/modifier.sol\":555:557  25 */\n      0x19\n        /* \"artifacts/Lalit/modifier.sol\":552:557  _x=25 */\n      swap2\n      pop\n        /* \"artifacts/Lalit/modifier.sol\":545:557  return _x=25 */\n      pop\n      jump(tag_16)\n        /* \"artifacts/Lalit/modifier.sol\":511:562  for (uint i=0; i<10;i++){... */\n    tag_18:\n      pop\n        /* \"artifacts/Lalit/modifier.sol\":462:569  function fun2() public pure returns ( uint _x ){... */\n    tag_16:\n      swap1\n      jump\t// out\n        /* \"artifacts/Lalit/modifier.sol\":333:459  function fun1() public pure modname returns(string memory){... */\n    tag_9:\n        /* \"artifacts/Lalit/modifier.sol\":377:390  string memory */\n      0x60\n        /* \"artifacts/Lalit/modifier.sol\":267:273  uint i */\n      0x00\n        /* \"artifacts/Lalit/modifier.sol\":262:302  for (uint i=0; i<10;i++){... */\n    tag_21:\n        /* \"artifacts/Lalit/modifier.sol\":279:281  10 */\n      0x0a\n        /* \"artifacts/Lalit/modifier.sol\":277:278  i */\n      dup2\n        /* \"artifacts/Lalit/modifier.sol\":277:281  i<10 */\n      lt\n        /* \"artifacts/Lalit/modifier.sol\":262:302  for (uint i=0; i<10;i++){... */\n      iszero\n      tag_22\n      jumpi\n        /* \"artifacts/Lalit/modifier.sol\":400:406  uint i */\n      0x00\n        /* \"artifacts/Lalit/modifier.sol\":412:414  10 */\n      0x0a\n        /* \"artifacts/Lalit/modifier.sol\":410:411  i */\n      dup2\n        /* \"artifacts/Lalit/modifier.sol\":410:414  i<10 */\n      lt\n        /* \"artifacts/Lalit/modifier.sol\":395:457  for (uint i=0; i<10;i++){... */\n      iszero\n      tag_26\n      jumpi\n        /* \"artifacts/Lalit/modifier.sol\":430:452  return \" hare Krishna\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      0x2068617265204b726973686e6100000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_24)\n        /* \"artifacts/Lalit/modifier.sol\":395:457  for (uint i=0; i<10;i++){... */\n    tag_26:\n      pop\n        /* \"artifacts/Lalit/modifier.sol\":296:297  _ */\n    tag_24:\n        /* \"artifacts/Lalit/modifier.sol\":282:285  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"artifacts/Lalit/modifier.sol\":262:302  for (uint i=0; i<10;i++){... */\n      jump(tag_21)\n    tag_22:\n      pop\n        /* \"artifacts/Lalit/modifier.sol\":333:459  function fun1() public pure modname returns(string memory){... */\n      swap1\n      jump\t// out\n        /* \"artifacts/Lalit/modifier.sol\":571:687  function fun3() public view returns ( address){... */\n    tag_15:\n        /* \"artifacts/Lalit/modifier.sol\":609:616  address */\n      0x00\n        /* \"artifacts/Lalit/modifier.sol\":624:630  uint i */\n      dup1\n        /* \"artifacts/Lalit/modifier.sol\":631:632  0 */\n      0x00\n        /* \"artifacts/Lalit/modifier.sol\":624:632  uint i=0 */\n      swap1\n      pop\n        /* \"artifacts/Lalit/modifier.sol\":636:638  10 */\n      0x0a\n        /* \"artifacts/Lalit/modifier.sol\":634:635  i */\n      dup2\n        /* \"artifacts/Lalit/modifier.sol\":634:638  i<10 */\n      lt\n        /* \"artifacts/Lalit/modifier.sol\":619:680  for (uint i=0; i<10;i++){... */\n      iszero\n      tag_30\n      jumpi\n        /* \"artifacts/Lalit/modifier.sol\":664:674  msg.sender */\n      caller\n        /* \"artifacts/Lalit/modifier.sol\":655:675  return ( msg.sender) */\n      swap2\n      pop\n      pop\n      jump(tag_28)\n        /* \"artifacts/Lalit/modifier.sol\":619:680  for (uint i=0; i<10;i++){... */\n    tag_30:\n      pop\n        /* \"artifacts/Lalit/modifier.sol\":571:687  function fun3() public view returns ( address){... */\n    tag_28:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d995d3e764df38b15d37fae4d65be282c550175b3205482c5b666f239b7c9e7f64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101f8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063157b516714610046578063446a45b7146100645780637b8239fa146100e7575b600080fd5b61004e61011b565b6040518082815260200191505060405180910390f35b61006c61013a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ac578082015181840152602081019050610091565b50505050905090810190601f1680156100d95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100ef6101a4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009050600a811015610135576019915050610137565b505b90565b606060005b600a8110156101a0576000600a811015610191576040518060400160405280600d81526020017f2068617265204b726973686e6100000000000000000000000000000000000000815250925050610193565b505b808060010191505061013f565b5090565b60008060009050600a8110156101bd57339150506101bf565b505b9056fea2646970667358221220d995d3e764df38b15d37fae4d65be282c550175b3205482c5b666f239b7c9e7f64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x157B5167 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x446A45B7 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x7B8239FA EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x91 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0xA DUP2 LT ISZERO PUSH2 0x135 JUMPI PUSH1 0x19 SWAP2 POP POP PUSH2 0x137 JUMP JUMPDEST POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 PUSH1 0xA DUP2 LT ISZERO PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2068617265204B726973686E6100000000000000000000000000000000000000 DUP2 MSTORE POP SWAP3 POP POP PUSH2 0x193 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x13F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0xA DUP2 LT ISZERO PUSH2 0x1BD JUMPI CALLER SWAP2 POP POP PUSH2 0x1BF JUMP JUMPDEST POP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SWAP6 0xD3 0xE7 PUSH5 0xDF38B15D37 STATICCALL 0xE4 0xD6 JUMPDEST 0xE2 DUP3 0xC5 POP OR JUMPDEST ORIGIN SDIV 0x48 0x2C JUMPDEST PUSH7 0x6F239B7C9E7F64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "217:472:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063157b516714610046578063446a45b7146100645780637b8239fa146100e7575b600080fd5b61004e61011b565b6040518082815260200191505060405180910390f35b61006c61013a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ac578082015181840152602081019050610091565b50505050905090810190601f1680156100d95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100ef6101a4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009050600a811015610135576019915050610137565b505b90565b606060005b600a8110156101a0576000600a811015610191576040518060400160405280600d81526020017f2068617265204b726973686e6100000000000000000000000000000000000000815250925050610193565b505b808060010191505061013f565b5090565b60008060009050600a8110156101bd57339150506101bf565b505b9056fea2646970667358221220d995d3e764df38b15d37fae4d65be282c550175b3205482c5b666f239b7c9e7f64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x157B5167 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x446A45B7 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x7B8239FA EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x91 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0xA DUP2 LT ISZERO PUSH2 0x135 JUMPI PUSH1 0x19 SWAP2 POP POP PUSH2 0x137 JUMP JUMPDEST POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 PUSH1 0xA DUP2 LT ISZERO PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2068617265204B726973686E6100000000000000000000000000000000000000 DUP2 MSTORE POP SWAP3 POP POP PUSH2 0x193 JUMP JUMPDEST POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x13F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0xA DUP2 LT ISZERO PUSH2 0x1BD JUMPI CALLER SWAP2 POP POP PUSH2 0x1BF JUMP JUMPDEST POP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SWAP6 0xD3 0xE7 PUSH5 0xDF38B15D37 STATICCALL 0xE4 0xD6 JUMPDEST 0xE2 DUP3 0xC5 POP OR JUMPDEST ORIGIN SDIV 0x48 0x2C JUMPDEST PUSH7 0x6F239B7C9E7F64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "217:472:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;333:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;571:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;462:107;500:7;516:6;523:1;516:8;;528:2;526:1;:4;511:51;;;555:2;552:5;;545:12;;;511:51;;462:107;;:::o;333:126::-;377:13;267:6;262:40;279:2;277:1;:4;262:40;;;400:6:::1;412:2;410:1;:4;395:62;;;430:22;;;;;;;;;;;;;;;;::::0;::::1;;;;;395:62;;296:1;282:3:::0;;;;;;;262:40;;;;333:126;:::o;571:116::-;609:7;624:6;631:1;624:8;;636:2;634:1;:4;619:61;;;664:10;655:20;;;;;619:61;;571:116;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "100800",
								"executionCost": "147",
								"totalCost": "100947"
							},
							"external": {
								"fun1()": "infinite",
								"fun2()": "241",
								"fun3()": "290"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 217,
									"end": 689,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 217,
									"end": 689,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 217,
									"end": 689,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 217,
									"end": 689,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 217,
									"end": 689,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 217,
									"end": 689,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 217,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 217,
									"end": 689,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 217,
									"end": 689,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 217,
									"end": 689,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 217,
									"end": 689,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 217,
									"end": 689,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 217,
									"end": 689,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 217,
									"end": 689,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 217,
									"end": 689,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 217,
									"end": 689,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 217,
									"end": 689,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 217,
									"end": 689,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 217,
									"end": 689,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 217,
									"end": 689,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 217,
									"end": 689,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d995d3e764df38b15d37fae4d65be282c550175b3205482c5b666f239b7c9e7f64736f6c63430007060033",
									".code": [
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "157B5167"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "446A45B7"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "7B8239FA"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 462,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 462,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 462,
											"end": 569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 462,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 462,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 462,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 500,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 526,
											"end": 530,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 511,
											"end": 562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 511,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 511,
											"end": 562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 552,
											"end": 557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 552,
											"end": 557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 545,
											"end": 557,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 511,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 462,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 569,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 333,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 377,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 267,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 277,
											"end": 278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 277,
											"end": 281,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 262,
											"end": 302,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 400,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 410,
											"end": 411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 410,
											"end": 414,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 395,
											"end": 457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 395,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 395,
											"end": 457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 430,
											"end": 452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "PUSH",
											"source": 0,
											"value": "2068617265204B726973686E6100000000000000000000000000000000000000"
										},
										{
											"begin": 430,
											"end": 452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 430,
											"end": 452,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 395,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 395,
											"end": 457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 296,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 282,
											"end": 285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 282,
											"end": 285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 282,
											"end": 285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 282,
											"end": 285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 282,
											"end": 285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 459,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 624,
											"end": 632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 634,
											"end": 638,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 619,
											"end": 680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 619,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 619,
											"end": 680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 664,
											"end": 674,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 655,
											"end": 675,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 619,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 619,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 619,
											"end": 680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 571,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 687,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"fun1()": "446a45b7",
							"fun2()": "157b5167",
							"fun3()": "7b8239fa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"fun1\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fun2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fun3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"artifacts/Lalit/modifier.sol\":\"Modifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"artifacts/Lalit/modifier.sol\":{\"keccak256\":\"0x70108a4e55059db14d5c6d56f73f1ca47bf35a3593e1cf70881785eb8ee28ada\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cfbd5f0d707915fbc68106390a7ca3d69d32b97efdde8f925d70bcc50c5a5949\",\"dweb:/ipfs/QmeVSK4bXhMT6qB85hjxatJCDLXQDSXagZDpdZJ6X6LHcb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "artifacts/Lalit/modifier.sol:22:45: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\nfunction fun1() public pure modname returns(string memory){\n                                            ^-----------^\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 390,
					"file": "artifacts/Lalit/modifier.sol",
					"start": 377
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "artifacts/Lalit/modifier.sol:24:22: Warning: Unreachable code.\n for (uint i=0; i<10;i++){\n                     ^-^\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 418,
					"file": "artifacts/Lalit/modifier.sol",
					"start": 415
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "artifacts/Lalit/modifier.sol:35:21: Warning: Unreachable code.\nfor (uint i=0; i<10;i++){\n                    ^-^\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 534,
					"file": "artifacts/Lalit/modifier.sol",
					"start": 531
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "artifacts/Lalit/modifier.sol:44:39: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\nfunction fun3() public view returns ( address){\n                                      ^-----^\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 616,
					"file": "artifacts/Lalit/modifier.sol",
					"start": 609
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "artifacts/Lalit/modifier.sol:45:21: Warning: Unreachable code.\nfor (uint i=0; i<10;i++){\n                    ^-^\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 642,
					"file": "artifacts/Lalit/modifier.sol",
					"start": 639
				},
				"type": "Warning"
			}
		],
		"sources": {
			"artifacts/Lalit/modifier.sol": {
				"ast": {
					"absolutePath": "artifacts/Lalit/modifier.sol",
					"exportedSymbols": {
						"Modifier": [
							84
						]
					},
					"id": 85,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 84,
							"linearizedBaseContracts": [
								84
							],
							"name": "Modifier",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "260:50:0",
										"statements": [
											{
												"body": {
													"id": 14,
													"nodeType": "Block",
													"src": "286:16:0",
													"statements": [
														{
															"id": 13,
															"nodeType": "PlaceholderStatement",
															"src": "296:1:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 7,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "279:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "277:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 15,
												"initializationExpression": {
													"assignments": [
														4
													],
													"declarations": [
														{
															"constant": false,
															"id": 4,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 15,
															"src": "267:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "267:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 6,
													"initialValue": {
														"hexValue": "30",
														"id": 5,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "274:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "267:8:0"
												},
												"loopExpression": {
													"expression": {
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "282:3:0",
														"subExpression": {
															"id": 10,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "282:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 12,
													"nodeType": "ExpressionStatement",
													"src": "282:3:0"
												},
												"nodeType": "ForStatement",
												"src": "262:40:0"
											}
										]
									},
									"id": 17,
									"name": "modname",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:2:0"
									},
									"src": "242:68:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "391:68:0",
										"statements": [
											{
												"body": {
													"id": 36,
													"nodeType": "Block",
													"src": "419:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "2068617265204b726973686e61",
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "437:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_3730c4343eceb1d550ef63c0d99e2f7bb474c3237b57cbac3ac8883c6ed1b76d",
																	"typeString": "literal_string \" hare Krishna\""
																},
																"value": " hare Krishna"
															},
															"functionReturnParameters": 23,
															"id": 35,
															"nodeType": "Return",
															"src": "430:22:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 28,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "410:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "412:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "410:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 37,
												"initializationExpression": {
													"assignments": [
														25
													],
													"declarations": [
														{
															"constant": false,
															"id": 25,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 37,
															"src": "400:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 24,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "400:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 27,
													"initialValue": {
														"hexValue": "30",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "407:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "400:8:0"
												},
												"loopExpression": {
													"expression": {
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "415:3:0",
														"subExpression": {
															"id": 31,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "415:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 33,
													"nodeType": "ExpressionStatement",
													"src": "415:3:0"
												},
												"nodeType": "ForStatement",
												"src": "395:62:0"
											}
										]
									},
									"functionSelector": "446a45b7",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"modifierName": {
												"id": 19,
												"name": "modname",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 17,
												"src": "361:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "361:7:0"
										}
									],
									"name": "fun1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "377:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 21,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "377:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:15:0"
									},
									"scope": 84,
									"src": "333:126:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "509:60:0",
										"statements": [
											{
												"body": {
													"id": 58,
													"nodeType": "Block",
													"src": "535:27:0",
													"statements": [
														{
															"expression": {
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 54,
																	"name": "_x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "552:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3235",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "555:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_25_by_1",
																		"typeString": "int_const 25"
																	},
																	"value": "25"
																},
																"src": "552:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 43,
															"id": 57,
															"nodeType": "Return",
															"src": "545:12:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 48,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "526:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "528:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "526:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 59,
												"initializationExpression": {
													"assignments": [
														45
													],
													"declarations": [
														{
															"constant": false,
															"id": 45,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 59,
															"src": "516:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 44,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "516:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 47,
													"initialValue": {
														"hexValue": "30",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "523:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "516:8:0"
												},
												"loopExpression": {
													"expression": {
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "531:3:0",
														"subExpression": {
															"id": 51,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "531:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 53,
													"nodeType": "ExpressionStatement",
													"src": "531:3:0"
												},
												"nodeType": "ForStatement",
												"src": "511:51:0"
											}
										]
									},
									"functionSelector": "157b5167",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fun2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "_x",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "500:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "500:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:11:0"
									},
									"scope": 84,
									"src": "462:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "617:70:0",
										"statements": [
											{
												"body": {
													"id": 80,
													"nodeType": "Block",
													"src": "643:37:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"expression": {
																			"id": 76,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "664:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "664:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"id": 78,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "662:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"functionReturnParameters": 65,
															"id": 79,
															"nodeType": "Return",
															"src": "655:20:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 70,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "634:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "636:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "634:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 81,
												"initializationExpression": {
													"assignments": [
														67
													],
													"declarations": [
														{
															"constant": false,
															"id": 67,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 81,
															"src": "624:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 66,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "624:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 69,
													"initialValue": {
														"hexValue": "30",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "631:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "624:8:0"
												},
												"loopExpression": {
													"expression": {
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "639:3:0",
														"subExpression": {
															"id": 73,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "639:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 75,
													"nodeType": "ExpressionStatement",
													"src": "639:3:0"
												},
												"nodeType": "ForStatement",
												"src": "619:61:0"
											}
										]
									},
									"functionSelector": "7b8239fa",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fun3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:2:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "609:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:10:0"
									},
									"scope": 84,
									"src": "571:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 85,
							"src": "217:472:0"
						}
					],
					"src": "37:653:0"
				},
				"id": 0
			}
		}
	}
}