{
	"id": "799f364b41898e4e1e3aa47ebe9855ff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"artifacts/Lalit/interface.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity  >=0.5.0 <0.8.0;\n\n/* \nis is use for intract with the contract that are already deployed on the blockchain.iske liye deployed \ncontract ka address use karte hai.\n\n\nInterface is an agreement or a contract between itself and any other contract that implements it.\nCannot be declare state variables, constructor but some data type we can declare like enum, struct\ninterface have only function but not implemented. all declare functon must be external. \nthey can only inherit from other interface but not from other contract.\n\n*/\n\n// contract ke sthan par interface Likhate hai.and Interface name ka first letter Capital lena hai. \ninterface IA{\n    // state variable data type can not be use. but enum and struct can be use.\n    function funA() external;\n    function FunB() external pure returns( string memory);\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"artifacts/Lalit/interface.sol": {
				"IA": {
					"abi": [
						{
							"inputs": [],
							"name": "FunB",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "funA",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"FunB()": "09af273e",
							"funA()": "8e5159b0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FunB\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"funA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"artifacts/Lalit/interface.sol\":\"IA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"artifacts/Lalit/interface.sol\":{\"keccak256\":\"0x352d28c1d9b41fcb35ada05a17c4a0dc27fa5e141b2565ce9ab33d1c3d12279a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://783ba7daa111d8221bd3eae904c1d060fe01b8dbd630afc296d2d0ae02c0e80b\",\"dweb:/ipfs/QmNkrNArZ5DUQbRoUGJMECJbF9pbtzeFSWK79oQRXkHSGT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"artifacts/Lalit/interface.sol": {
				"ast": {
					"absolutePath": "artifacts/Lalit/interface.sol",
					"exportedSymbols": {
						"IA": [
							10
						]
					},
					"id": 11,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "IA",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8e5159b0",
									"id": 4,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "funA",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "802:0:0"
									},
									"scope": 10,
									"src": "778:25:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "09af273e",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "FunB",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "821:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "847:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 6,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:16:0"
									},
									"scope": 10,
									"src": "808:54:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 11,
							"src": "680:184:0"
						}
					],
					"src": "37:829:0"
				},
				"id": 0
			}
		}
	}
}